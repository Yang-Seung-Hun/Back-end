name: deploy1

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          
          
        
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew clean build

      # 전송할 파일을 담을 디렉토리 생성
      - name: Make Directory for deliver
        run: mkdir deploy

      # Jar 파일 Copy
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy/
        
         # 압축파일 형태로 전달
      - name: Make zip file
        run: zip -r -qq -j ./springboot-intro-build.zip ./deploy
        
      # S3 Bucket으로 copy
      - name: Deliver to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          aws s3 cp \
          --region ap-northeast-2 \
          --acl private \ 
	        ./springboot-intro-build.zip s3://springboot-intro-build/

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.ACCESS_KEY }}
#           aws-secret-access-key: ${{ secrets.SECRET_KEY }}
#           aws-region:  ap-northeast-2

#       - name: Upload to S3
#         run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://ghwns6743/$PROJECT_NAME/$GITHUB_SHA.zip

#       - name: Code Deploy
#         run: aws deploy create-deployment --application-name ghwns6743 --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name ghwns6743 --s3-location bucket=ghwns6743,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip


  
